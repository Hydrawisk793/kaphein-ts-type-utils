/* //////////////////////////////////////////////////////////////// */
/* Since v2.8 */

export type Exclude<T, U> = T extends U ? never : T;

export type Extract<T, U> = T extends U ? T : never;

/* //////////////////////////////////////////////////////////////// */

/* //////////////////////////////////////////////////////////////// */
/* Since v3.5 */

export type Omit<
    T,
    K extends keyof any
> = Pick<T, Exclude<keyof T, K>>;

/* //////////////////////////////////////////////////////////////// */
